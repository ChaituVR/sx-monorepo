name: Publish Electron App

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  publish:
    runs-on: macos-latest
    
    # Only run if release tag matches pattern @snapshot-labs/ui@*
    if: startsWith(github.event.release.tag_name, '@snapshot-labs/ui@')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build sx.js dependency
        run: yarn workspace @snapshot-labs/sx build

      - name: Build UI (skip codegen if it fails)
        run: |
          cd apps/ui
          # Try to run codegen, but continue if it fails
          yarn codegen || echo "Codegen failed, continuing without generated types..."
          # Build the UI
          ELECTRON=true yarn build

      - name: Make Electron distributables
        run: |
          cd apps/ui
          # Use electron-forge make directly to build for all platforms
          npx electron-forge make --platform=darwin --arch=x64
          npx electron-forge make --platform=darwin --arch=arm64
          npx electron-forge make --platform=win32 --arch=x64
          npx electron-forge make --platform=win32 --arch=arm64
          npx electron-forge make --platform=linux --arch=x64
          npx electron-forge make --platform=linux --arch=arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload build artifacts to release
        run: |
          cd apps/ui/out/make
          
          # Find and upload all built artifacts
          echo "Searching for build artifacts..."
          find . -name "*.dmg" -o -name "*.exe" -o -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm" -o -name "*.zip" | while read -r file; do
            echo "Uploading: $file"
            gh release upload "${{ github.event.release.tag_name }}" "$file" --clobber
          done
          
          echo "Build artifacts uploaded successfully!"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}