name: Build and Release Electron App

on:
  push:
    branches: [master]
    paths:
      - 'apps/ui/**'
      - '.github/workflows/electron-build.yml'

jobs:
  build-and-release:
    runs-on: macos-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Get version from package.json
        id: version
        run: |
          cd apps/ui
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Build Electron App (macOS)
        run: |
          cd apps/ui
          yarn electron:build

      - name: Create Release
        id: create_release
        run: |
          gh release create v${{ steps.version.outputs.version }}-${{ github.run_number }} \
            --title "Snapshot X v${{ steps.version.outputs.version }}-${{ github.run_number }}" \
            --notes "Auto-generated release for Snapshot X

          ## Changes
          - Build #${{ github.run_number }}
          - Commit: ${{ github.sha }}

          ## Downloads

          ### macOS
          - **DMG**: Download the \`.dmg\` file for macOS installation" \
            --prerelease
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        run: |
          cd apps/ui/dist-electron
          # Upload macOS builds directly
          for file in *.dmg *.dmg.blockmap latest-mac.yml; do
            if [ -f "$file" ]; then
              echo "Uploading $file"
              gh release upload v${{ steps.version.outputs.version }}-${{ github.run_number }} "$file"
            fi
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-for-updates:
    runs-on: macos-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Publish Electron App with Auto-updater
        run: |
          cd apps/ui
          yarn build:electron
          npx electron-builder --mac --publish=always
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
